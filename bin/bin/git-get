#!/usr/bin/env bash

set -e
set -u
set -o pipefail

# Constants.
color_reset=""
color_red=""
color_green=""
color_blue=""

# Check if stdout is a terminal.
if [ -t 1 ]; then
    color_reset="$(printf "\033[0m")"
    color_red="$(printf "\033[31;01m")"
    color_green="$(printf "\033[0;32m")"
    color_blue="$(printf "\033[0;34m")"
fi

# Helpers.
help() {
    cat << EOF
usage: git get <repo>
EOF
}

fatal() {
    echo "${color_red}fatal${color_reset}: $@." 1>&2

    echo 1>&2

    help 1>&2

    exit 1
}

repository="$1"
if [ -z "$repository" ]; then
    fatal "You must specify a repository to get"
fi

parts=($(git-parse "$repository"))
if [ ! "$?" = 0 ]; then
    fatal "Something went wrong"
fi

host="${parts[0]}"
user="${parts[1]}"
repo="${parts[2]}"

dir="$(git-path ${parts[@]})"
if [ ! "$?" = 0 ]; then
    fatal "Something went wrong"
fi

echo "Getting ${color_blue}${user}/${repo}${color_reset} from ${color_blue}${host}${color_reset} into '${color_green}${dir}${color_reset}'"

git clone "$repository" "$dir"
