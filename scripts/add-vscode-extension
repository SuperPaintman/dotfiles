#!/usr/bin/env nix-shell
#!nix-shell -i bash -p pkgs.curl -p pkgs.unzip -p pkgs.jq -p pkgs.yaml2json

set -e
set -u
set -o pipefail

# Constants.
ROOT="$(realpath "$(dirname "$(realpath "${BASH_SOURCE[0]}")")/..")"

# Helpers.
get_vsixpkg() {
    local publisher="$1"
    local name="$2"

    local ext_url="https://${publisher}.gallery.vsassets.io/_apis/public/gallery/publisher/${publisher}/extension/${name}/latest/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage"
    local tmp_ext_zip="$(mktemp -t --dry-run "${publisher}.${name}.XXXXXXXX.zip")"

    trap "rm -f $tmp_ext_zip" EXIT

    curl -s "$ext_url" -o "$tmp_ext_zip"

    local package="$(unzip -qc "$tmp_ext_zip" "extension/package.json" | jq .)"
    local version="$(echo "$package" | jq -r '.version')"
    local description="$(echo "$package" | jq '.description')"
    local sha256="$(nix-hash --flat --base32 --type sha256 "$tmp_ext_zip")"

    cat << EOF | jq -c .
        {
            "version": "$version",
            "description": $description,
            "sha256": "$sha256"
        }
EOF
}

PUBLISHER="$1"
NAME="$2"

info="$(get_vsixpkg "$PUBLISHER" "$NAME")"
version="$(echo "$info" | jq -r .version)"
description="$(echo "$info" | jq -r .description)"
sha256="$(echo "$info" | jq -r .sha256)"

cat << EOF >> "$ROOT/vscode/extensions.yml"
    ## ${description}.
    - name: $NAME
      publisher: $PUBLISHER
      version: "$version"
      sha256: $sha256
EOF

exec "$ROOT/scripts/generate-vscode-extensions"
